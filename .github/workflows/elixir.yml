name: Elixir CI

on:
  push:
    branches: [ main, development ]
  pull_request:
    branches: [ main, development ]

jobs:
  test:

    name: test OTP ${{matrix.otp}} / Elixir ${{matrix.elixir}}
    runs-on: ubuntu-latest

    strategy:
      matrix:
        elixir: [1.12.3]
        otp: [22.3]

    services:
      db:
        image: postgres:13
        ports: ['5432:5432']
        env:
          POSTGRES_PASSWORD: postgres
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
    - uses: actions/checkout@v2
    - name: Set up Elixir
      uses: erlef/setup-beam@730ac65cba0700bad37c0744de4aa916c16bb728
      with:
        elixir-version: ${{ matrix.elixir }}
        otp-version: ${{ matrix.otp }}

    - name: Restore dependencies cache
      uses: actions/cache@v2
      with:
        path: deps
        key: ${{ runner.os }}-mix-${{ hashFiles('**/mix.lock') }}
        restore-keys: ${{ runner.os }}-mix-

    - name: Install dependencies
      run: mix deps.get

    - name: Check Formatting
      run: mix format --check-formatted

    - name: Run Credo
      run: mix credo --strict

    - name: Restore PLT cache
      uses: actions/cache@v2
      id: plt_cache
      with:
        key: ${{ runner.os }}-${{ matrix.elixir }}-${{ matrix.otp }}-plt
        restore-keys: ${{ runner.os }}-${{ matrix.elixir }}-${{ matrix.otp }}-plt
        path: priv/plts

    - name: Create PLTs
      if: steps.plt_cache.outputs.cache-hit != 'true'
      run: mix dialyzer --plt

    - name: Run dialyzer
      run: mix dialyzer

    - name: Run tests
      run: mix test
